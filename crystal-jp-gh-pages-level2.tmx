<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx14.dtd">
<tmx version="1.4">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="3.1.9_1" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv xml:lang="EN-US">
        <seg>"Hello world! The time is #{Time.now}"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072712Z" creationid="hirofumiwakasugi" creationdate="20150901T072712Z">
        <seg>"Hello world! The time is #{Time.now}"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># A proc with one argument
-&gt;(x : Int32) { x.to_s } # Proc(Int32, String)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021112Z" creationid="hirofumiwakasugi" creationdate="20150902T021112Z">
        <seg># 引数を1つ持つ Proc
-&gt;(x : Int32) { x.to_s } # Proc(Int32, String)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># A proc with two arguments:
-&gt;(x : Int32, y : Int32) { x + y } # Proc(Int32, Int32, Int32)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021130Z" creationid="hirofumiwakasugi" creationdate="20150902T021121Z">
        <seg># 引数を2つ持つ Proc
-&gt;(x : Int32, y : Int32) { x + y } # Proc(Int32, Int32, Int32)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># An indexed assignment
objects.[]=(2, 3)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054712Z" creationid="hirofumiwakasugi" creationdate="20150902T054712Z">
        <seg># インデックスを指定した代入
objects.[]=(2, 3)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Array</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022630Z" creationid="hirofumiwakasugi" creationdate="20150901T073243Z">
        <seg># 配列 (Array)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Assignment</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053909Z" creationid="hirofumiwakasugi" creationdate="20150902T053904Z">
        <seg># 代入</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Assigns to a class variable
@@class = 3</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054112Z" creationid="hirofumiwakasugi" creationdate="20150902T054112Z">
        <seg>#  クラス変数への代入
@@class = 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Assigns to a global variable
$global = 4
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054124Z" creationid="hirofumiwakasugi" creationdate="20150902T054124Z">
        <seg># グローバル変数への代入
$global = 4
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Assigns to an instance variable
@instance = 2</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053953Z" creationid="hirofumiwakasugi" creationdate="20150902T053953Z">
        <seg># インスタンス変数への代入
@instance = 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Bool</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022650Z" creationid="hirofumiwakasugi" creationdate="20150901T050949Z">
        <seg># 真偽値 (Bool)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Callbacks</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023632Z" creationid="hirofumiwakasugi" creationdate="20150902T023632Z">
        <seg># Callbacks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Char</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022713Z" creationid="hirofumiwakasugi" creationdate="20150901T051210Z">
        <seg># 文字 (Char)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Comments</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050436Z" creationid="hirofumiwakasugi" creationdate="20150901T050436Z">
        <seg># コメント</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Crystal Programming Language</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T083639Z" creationid="hirofumiwakasugi" creationdate="20150831T050519Z">
        <seg># プログラミング言語 Crystal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Ending with question and exclamation marks
:question?
:exclamation!</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T131417Z" creationid="hirofumiwakasugi" creationdate="20150901T131350Z">
        <seg># 名前が ? や ! で終わるシンボル
:question?
:exclamation!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Floats</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022728Z" creationid="hirofumiwakasugi" creationdate="20150901T073255Z">
        <seg># 浮動小数点数 (Float)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># For the operators
:+
:-
:*
:/
:==
:&lt;
:&lt;=
:&gt;
:&gt;=
:!
:!=
:=~
:!~
:&amp;
:|
:^
:~
:**
:&gt;&gt;
:&lt;&lt;
:%
:[]
:[]?
:[]=
:&lt;=&gt;
:===
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T131433Z" creationid="hirofumiwakasugi" creationdate="20150901T131433Z">
        <seg># 演算子
:+
:-
:*
:/
:==
:&lt;
:&lt;=
:&gt;
:&gt;=
:!
:!=
:=~
:!~
:&amp;
:|
:^
:~
:**
:&gt;&gt;
:&lt;&lt;
:%
:[]
:[]?
:[]=
:&lt;=&gt;
:===
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># From a tar.gz</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T061923Z" creationid="hirofumiwakasugi" creationdate="20150831T050418Z">
        <seg># tar.gz からインストール</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># From sources</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060014Z" creationid="hirofumiwakasugi" creationdate="20150831T054710Z">
        <seg># ソースコードからインストール</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Global variables</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053417Z" creationid="hirofumiwakasugi" creationdate="20150902T053409Z">
        <seg># グローバル変数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># HTTP Server</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072521Z" creationid="hirofumiwakasugi" creationdate="20150831T064731Z">
        <seg># HTTP サーバー</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Hash</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022737Z" creationid="hirofumiwakasugi" creationdate="20150901T074025Z">
        <seg># ハッシュ (Hash)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Hello World!</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T054726Z" creationid="hirofumiwakasugi" creationdate="20150831T054726Z">
        <seg># Hello World!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Installation</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053756Z" creationid="hirofumiwakasugi" creationdate="20150831T053748Z">
        <seg># インストール</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Integers</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022745Z" creationid="hirofumiwakasugi" creationdate="20150901T051254Z">
        <seg># 整数 (Integer)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Literals</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050728Z" creationid="hirofumiwakasugi" creationdate="20150901T050720Z">
        <seg># リテラル</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Local variables</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T051622Z" creationid="hirofumiwakasugi" creationdate="20150902T051615Z">
        <seg># ローカル変数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Low-level primitives</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053536Z" creationid="hirofumiwakasugi" creationdate="20150902T053536Z">
        <seg># Low-level primitives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Multiple assignment</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055224Z" creationid="hirofumiwakasugi" creationdate="20150902T055157Z">
        <seg># 多重代入</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Nil</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050840Z" creationid="hirofumiwakasugi" creationdate="20150901T050840Z">
        <seg># Nil</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Not assignment-related, but also syntax sugar:
objects.[](2, 3)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054747Z" creationid="hirofumiwakasugi" creationdate="20150902T054747Z">
        <seg># 代入ではないが、以下のシンタックスシュガーも有効
objects.[](2, 3)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># On Debian and Ubuntu</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053648Z" creationid="hirofumiwakasugi" creationdate="20150831T052610Z">
        <seg># Debian や Ubuntu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># On Mac OSX using Homebrew</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055126Z" creationid="hirofumiwakasugi" creationdate="20150831T055126Z">
        <seg># Mac OS X (Homebrew を利用)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># On RedHat and CentOS</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055033Z" creationid="hirofumiwakasugi" creationdate="20150831T054955Z">
        <seg># RedHat や CentOS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Overview</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071446Z" creationid="hirofumiwakasugi" creationdate="20150831T054952Z">
        <seg># 概要</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Proc</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020906Z" creationid="hirofumiwakasugi" creationdate="20150902T020906Z">
        <seg># Proc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Range</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022803Z" creationid="hirofumiwakasugi" creationdate="20150902T014000Z">
        <seg># 範囲 (Range)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Regex</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022811Z" creationid="hirofumiwakasugi" creationdate="20150902T013959Z">
        <seg># 正規表現 (Regex)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Requiring files</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050320Z" creationid="hirofumiwakasugi" creationdate="20150901T050320Z">
        <seg># Requiring files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Return types</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T130925Z" creationid="hirofumiwakasugi" creationdate="20150901T130925Z">
        <seg># Return types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Same as:
temp1 = "John"
temp2 = 32
person.name = temp1
person.age = temp2
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060250Z" creationid="hirofumiwakasugi" creationdate="20150902T060250Z">
        <seg># 上記は以下と同じ
temp1 = "John"
temp2 = 32
person.name = temp1
person.age = temp2
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Same as:
temp1 = 3
temp2 = 4
objects[1] = temp1
objects[2] = temp2
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060327Z" creationid="hirofumiwakasugi" creationdate="20150902T060327Z">
        <seg># 上記は以下と同じ
temp1 = 3
temp2 = 4
objects[1] = temp1
objects[2] = temp2
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># String</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022820Z" creationid="hirofumiwakasugi" creationdate="20150901T080750Z">
        <seg># 文字列 (String)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Summary</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T051321Z" creationid="hirofumiwakasugi" creationdate="20150831T051321Z">
        <seg># Summary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Supports double quotes and nested angles
%&lt;hello &lt;"world"&gt;&gt; # same as "hello &lt;\"world\"&gt;"
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T105144Z" creationid="hirofumiwakasugi" creationdate="20150901T104920Z">
        <seg># ダブルクォートと入れ子の山カッコ (アングルブラケット) を含む
%&lt;hello &lt;"world"&gt;&gt; # "hello &lt;\"world\"&gt;" と同じ
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Supports double quotes and nested brackets
%[hello ["world"]] # same as "hello [\"world\"]"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104824Z" creationid="hirofumiwakasugi" creationdate="20150901T104611Z">
        <seg># ダブルクォートと入れ子の角カッコ (ブラケット) を含む
%[hello ["world"]] # "hello [\"world\"]" と同じ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Supports double quotes and nested curlies
%{hello {"world"}} # same as "hello {\"world\"}"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104944Z" creationid="hirofumiwakasugi" creationdate="20150901T104839Z">
        <seg># ダブルクォートと入れ子の波カッコ (ブレース) を含む
%{hello {"world"}} # "hello {\"world\"}" と同じ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Symbol</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022831Z" creationid="hirofumiwakasugi" creationdate="20150901T071023Z">
        <seg># シンボル (Symbol)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Syntax and Semantics</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050310Z" creationid="hirofumiwakasugi" creationdate="20150901T050310Z">
        <seg># シンタックスとセマンティクス</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># The above can be written as:
objects[2, 3]
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054803Z" creationid="hirofumiwakasugi" creationdate="20150902T054803Z">
        <seg># 上記は以下のように書くことができる
objects[2, 3]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># The above can be written as:
objects[2] = 3</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054809Z" creationid="hirofumiwakasugi" creationdate="20150902T054724Z">
        <seg># 上記は以下のように書くことができる
objects[2] = 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># The above can be written as:
person.name = "John"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054814Z" creationid="hirofumiwakasugi" creationdate="20150902T054654Z">
        <seg># 上記は以下のように書くことができる
person.name = "John"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># The above is the same as this:
temp = "Crystal,1,github".split(",")
name   = temp[0]
age    = temp[1]
source = temp[2]
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060047Z" creationid="hirofumiwakasugi" creationdate="20150902T060047Z">
        <seg># 上記は以下と同じ
temp = "Crystal,1,github".split(",")
name   = temp[0]
age    = temp[1]
source = temp[2]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># The above is the same as this:
temp1 = "Crystal"
temp2 = 1
name  = temp1
age   = temp2
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055439Z" creationid="hirofumiwakasugi" creationdate="20150902T055439Z">
        <seg># 上記は以下と同じ
temp1 = "Crystal"
temp2 = 1
name  = temp1
age   = temp2
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># The above is the same as:
names = ["John", "Peter", "Jack"]
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060214Z" creationid="hirofumiwakasugi" creationdate="20150902T060214Z">
        <seg># 上記は以下と同じ
names = ["John", "Peter", "Jack"]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># The above is valid with these operators:
# +, -, *, /, %, |, &amp;, ^, **, &lt;&lt;, &gt;&gt;</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054447Z" creationid="hirofumiwakasugi" creationdate="20150902T054433Z">
        <seg># 上記は以下の演算子でも有効
# +, -, *, /, %, |, &amp;, ^, **, &lt;&lt;, &gt;&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Tuple</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022854Z" creationid="hirofumiwakasugi" creationdate="20150901T131530Z">
        <seg># タプル (Tuple)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># Using the compiler</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071702Z" creationid="hirofumiwakasugi" creationdate="20150901T071653Z">
        <seg># コンパイラを使用する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># With spaces and symbols
:"symbol with spaces"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T131413Z" creationid="hirofumiwakasugi" creationdate="20150901T131314Z">
        <seg># 名前にスペースを含むシンボル
:"symbol with spaces"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># alias</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023048Z" creationid="hirofumiwakasugi" creationdate="20150902T023048Z">
        <seg># alias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># break</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T050519Z" creationid="hirofumiwakasugi" creationdate="20150831T050519Z">
        <seg># break</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg># enum</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T013958Z" creationid="hirofumiwakasugi" creationdate="20150902T013958Z">
        <seg># enum</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Array of String</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140030Z" creationid="hirofumiwakasugi" creationdate="20150901T135818Z">
        <seg>## 文字列の配列</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Array of Symbol</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140056Z" creationid="hirofumiwakasugi" creationdate="20150901T140056Z">
        <seg>## シンボルの配列</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Array-like types</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140128Z" creationid="hirofumiwakasugi" creationdate="20150901T140128Z">
        <seg>## 配列ライクな型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Compiling and running at once</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071943Z" creationid="hirofumiwakasugi" creationdate="20150901T071943Z">
        <seg>## コンパイルと同時に実行する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Creating a project or library</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072138Z" creationid="hirofumiwakasugi" creationdate="20150901T072138Z">
        <seg>## プロジェクトやライブラリの作成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Creating an executable</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072020Z" creationid="hirofumiwakasugi" creationdate="20150901T072020Z">
        <seg>## 実行ファイルの作成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## From methods</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022025Z" creationid="hirofumiwakasugi" creationdate="20150902T022025Z">
        <seg>## メソッドから Proc を生成する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Hash-like types</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143020Z" creationid="hirofumiwakasugi" creationdate="20150901T143020Z">
        <seg>## ハッシュライクな型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Install
Once the repository is configured you're ready to install Crystal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071613Z" creationid="hirofumiwakasugi" creationdate="20150831T053128Z">
        <seg>## インストール
リポジトリの構成が完了すると、Crystal をインストールすることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Interpolation</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T105334Z" creationid="hirofumiwakasugi" creationdate="20150901T105226Z">
        <seg>## String Interpolation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Invoking</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021845Z" creationid="hirofumiwakasugi" creationdate="20150902T021845Z">
        <seg>## Proc の実行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Other commands and options</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072203Z" creationid="hirofumiwakasugi" creationdate="20150901T072203Z">
        <seg>## その他のコマンドやオプション</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Setup repository</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T052818Z" creationid="hirofumiwakasugi" creationdate="20150831T052654Z">
        <seg>## リポジトリの設定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## String keys</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142958Z" creationid="hirofumiwakasugi" creationdate="20150901T142958Z">
        <seg>## キーが文字列のハッシュ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Symbol keys</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142753Z" creationid="hirofumiwakasugi" creationdate="20150901T142700Z">
        <seg>## キーがシンボルのハッシュ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>## Upgrade</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053203Z" creationid="hirofumiwakasugi" creationdate="20150831T053203Z">
        <seg>## アップグレード</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* You can [require](../syntax_and_semantics/requiring_files.html) code defined in other files:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072604Z" creationid="hirofumiwakasugi" creationdate="20150901T072604Z">
        <seg>* [require](../syntax_and_semantics/requiring_files.html) で、他のファイルで定義されたコードを読み込むことができます</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* You can easily create strings with embedded content, known as string interpolation.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T105233Z" creationid="hirofumiwakasugi" creationdate="20150901T072651Z">
        <seg>* 文字列埋め込み (string interpolation) を使うと、簡単に文字列に式を埋め込むことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* You can use code blocks, or simply [blocks](../syntax_and_semantics/blocks_and_procs.html), which are a very convenient way to reuse code and get some features from the functional world:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072639Z" creationid="hirofumiwakasugi" creationdate="20150901T072639Z">
        <seg>* [ブロック](../syntax_and_semantics/blocks_and_procs.html)を使うと簡単にコードを再利用することができ、また、関数型の世界にあるいくつかの機能を利用することが可能になります</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* You program by invoking [methods](../syntax_and_semantics/classes_and_methods.html) (or sending messages) to objects.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072629Z" creationid="hirofumiwakasugi" creationdate="20150901T072623Z">
        <seg>* オブジェクトに対して[メソッド](../syntax_and_semantics/classes_and_methods.html)を実行 (またはメッセージを送信) することでプログラムを構築します</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Array](syntax_and_semantics/literals/array.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023035Z" creationid="hirofumiwakasugi" creationdate="20150902T023035Z">
        <seg>* [配列 (Array)](syntax_and_semantics/literals/array.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Assignment](syntax_and_semantics/assignment.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060413Z" creationid="hirofumiwakasugi" creationdate="20150902T060413Z">
        <seg>* [代入](syntax_and_semantics/assignment.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Bool](syntax_and_semantics/literals/bool.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022934Z" creationid="hirofumiwakasugi" creationdate="20150902T022934Z">
        <seg>* [真偽値 (Bool)](syntax_and_semantics/literals/bool.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Char](syntax_and_semantics/literals/char.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023007Z" creationid="hirofumiwakasugi" creationdate="20150902T023007Z">
        <seg>* [文字 (Char)](syntax_and_semantics/literals/char.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Comments](syntax_and_semantics/comments.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023640Z" creationid="hirofumiwakasugi" creationdate="20150901T073137Z">
        <seg>* [コメント](syntax_and_semantics/comments.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Floats](syntax_and_semantics/literals/floats.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022957Z" creationid="hirofumiwakasugi" creationdate="20150902T022957Z">
        <seg>* [浮動小数点数 (Float)](syntax_and_semantics/literals/floats.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [From a tar.gz](installation/from_a_targz.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T054750Z" creationid="hirofumiwakasugi" creationdate="20150831T054750Z">
        <seg>* [Ftar.gz からインストール](installation/from_a_targz.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [From sources](installation/from_source_repository.md)
* [Using the compiler](using_the_compiler/README.md)
* [Overview and Examples](overview/README.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T073130Z" creationid="hirofumiwakasugi" creationdate="20150831T054826Z">
        <seg>* [ソースコードからインストール](installation/from_source_repository.md)
* [コンパイラを使用する](using_the_compiler/README.md)
* [概要とプログラム例](overview/README.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Global variables](syntax_and_semantics/global_variables.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060405Z" creationid="hirofumiwakasugi" creationdate="20150902T060405Z">
        <seg>* [グローバル変数](syntax_and_semantics/global_variables.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [HTTP Server](overview/http_server.md)
* [Syntax and semantics](syntax_and_semantics/README.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T073145Z" creationid="hirofumiwakasugi" creationdate="20150901T073134Z">
        <seg>* [HTTP サーバー](overview/http_server.md)
* [シンタックスとセマンティクス](syntax_and_semantics/README.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Hash](syntax_and_semantics/literals/hash.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023041Z" creationid="hirofumiwakasugi" creationdate="20150902T023041Z">
        <seg>* [ハッシュ (Hash)](syntax_and_semantics/literals/hash.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Hello World!](overview/hello_world.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T073131Z" creationid="hirofumiwakasugi" creationdate="20150901T073131Z">
        <seg>* [Hello World!](overview/hello_world.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Integers](syntax_and_semantics/literals/integers.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022945Z" creationid="hirofumiwakasugi" creationdate="20150902T022945Z">
        <seg>* [整数 (Integer)](syntax_and_semantics/literals/integers.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Introduction](README.md)
* [Installation](installation/README.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T054642Z" creationid="hirofumiwakasugi" creationdate="20150831T054638Z">
        <seg>* [はじめに](README.md)
* [インストール](installation/README.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Literals](syntax_and_semantics/literals.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022927Z" creationid="hirofumiwakasugi" creationdate="20150902T022927Z">
        <seg>* [リテラル](syntax_and_semantics/literals.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Local variables](syntax_and_semantics/local_variables.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060356Z" creationid="hirofumiwakasugi" creationdate="20150902T060356Z">
        <seg>* [ローカル変数](syntax_and_semantics/local_variables.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Multiple assignment](syntax_and_semantics/multiple_assignment.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060420Z" creationid="hirofumiwakasugi" creationdate="20150902T060420Z">
        <seg>* [多重代入](syntax_and_semantics/multiple_assignment.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Nil](syntax_and_semantics/literals/nil.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022928Z" creationid="hirofumiwakasugi" creationdate="20150902T022928Z">
        <seg>* [Nil](syntax_and_semantics/literals/nil.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [On Debian And Ubuntu](on_debian_and_ubuntu.html)
* [On RedHat And CentOS](on_redhat_and_centos.html)
* [On Mac OSX using Homebrew](on_mac_osx_using_homebrew.html)
* [From a tar.gz](from_a_targz.html)
* [From sources](from_source_repository.html)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T054730Z" creationid="hirofumiwakasugi" creationdate="20150831T054027Z">
        <seg>* [Debian や Ubuntu](on_debian_and_ubuntu.html)
* [RedHat や CentOS](on_redhat_and_centos.html)
* [Mac OS X (Homebrew を利用)](on_mac_osx_using_homebrew.html)
* [tar.gz からインストール](from_a_targz.html)
* [ソースコードからインストール](from_source_repository.html)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [On Debian and Ubuntu](installation/on_debian_and_ubuntu.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T054650Z" creationid="hirofumiwakasugi" creationdate="20150831T054650Z">
        <seg>* [Debian や Ubuntu](installation/on_debian_and_ubuntu.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [On Mac OSX using Homebrew](installation/on_mac_osx_using_homebrew.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T054721Z" creationid="hirofumiwakasugi" creationdate="20150831T054702Z">
        <seg>* [Mac OS X (Homebrew を利用)](installation/on_mac_osx_using_homebrew.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [On RedHat and CentOS](installation/on_redhat_and_centos.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T054657Z" creationid="hirofumiwakasugi" creationdate="20150831T054657Z">
        <seg>* [RedHat や CentOS](installation/on_redhat_and_centos.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Proc](syntax_and_semantics/literals/proc.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023133Z" creationid="hirofumiwakasugi" creationdate="20150902T023133Z">
        <seg>* [Proc](syntax_and_semantics/literals/proc.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Range](syntax_and_semantics/literals/range.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023101Z" creationid="hirofumiwakasugi" creationdate="20150902T023043Z">
        <seg>* [範囲 (Range)](syntax_and_semantics/literals/range.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Regex](syntax_and_semantics/literals/regex.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023125Z" creationid="hirofumiwakasugi" creationdate="20150902T023113Z">
        <seg>* [正規表現 (Regex)](syntax_and_semantics/literals/regex.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [String](syntax_and_semantics/literals/string.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023018Z" creationid="hirofumiwakasugi" creationdate="20150902T023018Z">
        <seg>* [文字列 (String)](syntax_and_semantics/literals/string.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Symbol](syntax_and_semantics/literals/symbol.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023027Z" creationid="hirofumiwakasugi" creationdate="20150902T023027Z">
        <seg>* [シンボル (Symbol)](syntax_and_semantics/literals/symbol.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* [Tuple](syntax_and_semantics/literals/tuple.md)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T023132Z" creationid="hirofumiwakasugi" creationdate="20150902T023114Z">
        <seg>* [タプル (Tuple)](syntax_and_semantics/literals/tuple.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>* i: ignore case (PCRE_CASELESS)
* m: multiline (PCRE_MULTILINE)
* x: extended (PCRE_EXTENDED)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020133Z" creationid="hirofumiwakasugi" creationdate="20150902T020019Z">
        <seg>* i: 大小文字を区別しない (PCRE_CASELESS)
* m: 複数行のマッチング (PCRE_MULTILINE)
* x: 拡張 (PCRE_EXTENDED)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>**Note:** By default the generated executables **are not fully optimized**.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072104Z" creationid="hirofumiwakasugi" creationdate="20150901T072045Z">
        <seg>**注意:** デフォルトでは生成された実行ファイルは**完全に最適化**された状態ではありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>+1.3     # Float64
-0.5     # Float64
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074016Z" creationid="hirofumiwakasugi" creationdate="20150901T074016Z">
        <seg>+1.3     # Float64
-0.5     # Float64
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>+10    # Int32
-20    # Int32</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052302Z" creationid="hirofumiwakasugi" creationdate="20150901T052302Z">
        <seg>+10    # Int32
-20    # Int32</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>---
layout: post
title: Type inference (part 2)
author: bcardiff
---</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T050356Z" creationid="hirofumiwakasugi" creationdate="20150831T050356Z">
        <seg>---
layout: post
title: Type inference (part 2)
author: bcardiff
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--cross-compile flags            cross-compile</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072225Z" creationid="hirofumiwakasugi" creationdate="20150901T072225Z">
        <seg>--cross-compile flags            cross-compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--emit [asm|llvm-bc|llvm-ir|obj] Comma separated list of types of output for the compiler to emit</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072226Z" creationid="hirofumiwakasugi" creationdate="20150901T072226Z">
        <seg>--emit [asm|llvm-bc|llvm-ir|obj] Comma separated list of types of output for the compiler to emit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--help                   show this help</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072217Z" creationid="hirofumiwakasugi" creationdate="20150901T072217Z">
        <seg>--help                   show this help</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--link-flags FLAGS               Additional flags to pass to the linker</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072226Z" creationid="hirofumiwakasugi" creationdate="20150901T072226Z">
        <seg>--link-flags FLAGS               Additional flags to pass to the linker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--ll                             Dump ll to .crystal directory</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072226Z" creationid="hirofumiwakasugi" creationdate="20150901T072226Z">
        <seg>--ll                             Dump ll to .crystal directory</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--mcpu CPU                       Target specific cpu type</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072227Z" creationid="hirofumiwakasugi" creationdate="20150901T072227Z">
        <seg>--mcpu CPU                       Target specific cpu type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--no-build                       Disable build output</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072227Z" creationid="hirofumiwakasugi" creationdate="20150901T072227Z">
        <seg>--no-build                       Disable build output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--no-color                       Disable colored output</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072227Z" creationid="hirofumiwakasugi" creationdate="20150901T072227Z">
        <seg>--no-color                       Disable colored output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--prelude                        Use given file as prelude</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072227Z" creationid="hirofumiwakasugi" creationdate="20150901T072227Z">
        <seg>--prelude                        Use given file as prelude</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--release                        Compile in release mode</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072227Z" creationid="hirofumiwakasugi" creationdate="20150901T072227Z">
        <seg>--release                        Compile in release mode</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--single-module                  Generate a single LLVM module</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072228Z" creationid="hirofumiwakasugi" creationdate="20150901T072228Z">
        <seg>--single-module                  Generate a single LLVM module</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--target TRIPLE                  Target triple</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072228Z" creationid="hirofumiwakasugi" creationdate="20150901T072228Z">
        <seg>--target TRIPLE                  Target triple</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--threads                        Maximum number of threads to use</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072228Z" creationid="hirofumiwakasugi" creationdate="20150901T072228Z">
        <seg>--threads                        Maximum number of threads to use</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--verbose                        Display executed commands
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072229Z" creationid="hirofumiwakasugi" creationdate="20150901T072229Z">
        <seg>--verbose                        Display executed commands
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>--version                show version
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072217Z" creationid="hirofumiwakasugi" creationdate="20150901T072217Z">
        <seg>--version                show version
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>-D FLAG, --define FLAG           Define a compile-time flag</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072225Z" creationid="hirofumiwakasugi" creationdate="20150901T072225Z">
        <seg>-D FLAG, --define FLAG           Define a compile-time flag</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>-d, --debug                      Add symbolic debug info</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072225Z" creationid="hirofumiwakasugi" creationdate="20150901T072225Z">
        <seg>-d, --debug                      Add symbolic debug info</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>-h, --help                       Show this message</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072226Z" creationid="hirofumiwakasugi" creationdate="20150901T072226Z">
        <seg>-h, --help                       Show this message</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>-o                               Output filename</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072227Z" creationid="hirofumiwakasugi" creationdate="20150901T072227Z">
        <seg>-o                               Output filename</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>-s, --stats                      Enable statistics output</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072227Z" creationid="hirofumiwakasugi" creationdate="20150901T072227Z">
        <seg>-s, --stats                      Enable statistics output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>...</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T064827Z" creationid="hirofumiwakasugi" creationdate="20150831T064827Z">
        <seg>...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>1
end</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022049Z" creationid="hirofumiwakasugi" creationdate="20150902T022049Z">
        <seg>1
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>1_i8   # Int8
1_i16  # Int16
1_i32  # Int32
1_i64  # Int64</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052300Z" creationid="hirofumiwakasugi" creationdate="20150901T052300Z">
        <seg>1_i8   # Int8
1_i16  # Int16
1_i32  # Int32
1_i64  # Int64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>1_u8   # UInt8
1_u16  # UInt16
1_u32  # UInt32
1_u64  # UInt64</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052300Z" creationid="hirofumiwakasugi" creationdate="20150901T052300Z">
        <seg>1_u8   # UInt8
1_u16  # UInt16
1_u32  # UInt32
1_u64  # UInt64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>1e10     # Float64
1.5e10   # Float64
1.5e-7   # Float64</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074015Z" creationid="hirofumiwakasugi" creationdate="20150901T074015Z">
        <seg>1e10     # Float64
1.5e10   # Float64
1.5e-7   # Float64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>2147483648          # Int64
9223372036854775808 # UInt64
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052303Z" creationid="hirofumiwakasugi" creationdate="20150901T052303Z">
        <seg>2147483648          # Int64
9223372036854775808 # UInt64
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Hash can have mixed types, both for the keys and values, meaning `K`/`V` will be union types, but these are determined when the hash is created, either by specifying `K` and `V` or by using a hash literal.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142328Z" creationid="hirofumiwakasugi" creationdate="20150901T141745Z">
        <seg>ハッシュは異なる型を持つことが可能です。これは `K`/`V` それぞれが複数の型の組み合わせとなることを意味しています。ただ、それらの型はハッシュが作られたときに決定されます。つまり、ハッシュの生成時に明示的に指定された `K` と `T` か、</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Proc can be created from an existing method:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022254Z" creationid="hirofumiwakasugi" creationdate="20150902T022048Z">
        <seg>既存のメソッドから Proc を作ることもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A String is typically created with a string literal, enclosing UTF-8 characters in double quotes:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081024Z" creationid="hirofumiwakasugi" creationdate="20150901T081024Z">
        <seg>通常、ダブルクォートで囲んだ UTF-8 文字の並びで文字列リテラルを記述します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A [Char](http://crystal-lang.org/api/Char.html) represents a [Unicode](http://en.wikipedia.org/wiki/Unicode) [code point](http://en.wikipedia.org/wiki/Code_point).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T080922Z" creationid="hirofumiwakasugi" creationdate="20150901T074147Z">
        <seg>文字 ([Char](http://crystal-lang.org/api/Char.html)) は [Unicode](http://en.wikipedia.org/wiki/Unicode) の[コードポイント](http://en.wikipedia.org/wiki/Code_point)を表したもので、</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A [Hash](http://crystal-lang.org/api/Hash.html) representing a mapping of keys of a type `K` to values of a type `V`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140843Z" creationid="hirofumiwakasugi" creationdate="20150901T140718Z">
        <seg>ハッシュ ([Hash](http://crystal-lang.org/api/Hash.html)) は、`K` 型のキーと `V` 型の値のマッピングを表現するための型です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A [Proc](http://crystal-lang.org/api/Proc.html) represents a function pointer with an optional context (the closure data).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021022Z" creationid="hirofumiwakasugi" creationdate="20150902T021022Z">
        <seg>[Proc](http://crystal-lang.org/api/Proc.html) は関数ポインタを表すオブジェクトで、追加のコンテキスト (クロージャ) を含むことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A [Range](http://crystal-lang.org/api/Range.html) is typically constructed with a range literal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T014408Z" creationid="hirofumiwakasugi" creationdate="20150902T014234Z">
        <seg>範囲 ([Range](http://crystal-lang.org/api/Range.html)) オブジェクトを作るには範囲リテラルを使います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A [String](http://crystal-lang.org/api/String.html) represents an immutable sequence of UTF-8 characters.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T080913Z" creationid="hirofumiwakasugi" creationdate="20150901T080913Z">
        <seg>文字列 ([String](http://crystal-lang.org/api/String.html)) は UTF-8 の文字の不変 (イミュータブル) なシーケンスを表したものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A [Symbol](http://crystal-lang.org/api/Symbol.html) is a constant that is identified by a name without you having to give it a numeric value.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022842Z" creationid="hirofumiwakasugi" creationdate="20150901T131055Z">
        <seg>シンボル ([Symbol](http://crystal-lang.org/api/Symbol.html)) というのは、数値を与えることなく、その名前で識別することが可能な定数です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A [Tuple](http://crystal-lang.org/api/Tuple.html) is typically created with a tuple literal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020837Z" creationid="hirofumiwakasugi" creationdate="20150902T020742Z">
        <seg>タプル ([Tuple](http://crystal-lang.org/api/Tuple.html)) を作るには、以下のタプルリテラルを使います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A backslash can be used to denote some characters inside the string:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081044Z" creationid="hirofumiwakasugi" creationdate="20150901T081044Z">
        <seg>文字列中のいくつかの文字はバックスラッシュを使って表します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A comment using `::` is used for showing the type of a variable.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072402Z" creationid="hirofumiwakasugi" creationdate="20150901T072358Z">
        <seg>また、コメントの `::` は、変数の型を示すために利用されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A floating point literal is an optional `+` or `-` sign, followed by
a sequence of numbers or underscores, followed by a dot,
followed by numbers or underscores, followed by an optional exponent suffix,
followed by an optional type suffix.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T080637Z" creationid="hirofumiwakasugi" creationdate="20150901T073559Z">
        <seg>浮動小数点数リテラルは、`+` (オプション) または `-` 符号に続く数値とアンダースコア、そしてドット (`.`) と、またそれに続く数値とアンダースコアによって記述し、オプションで指数と型のサフィックスを与えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A method invocation that ends with `=` has syntax sugar:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054634Z" creationid="hirofumiwakasugi" creationdate="20150902T054634Z">
        <seg>メソッド名が `=` で終わるメソッドの実行にもシンタックスシュガーがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A proc can optionally specify a receiver:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022250Z" creationid="hirofumiwakasugi" creationdate="20150902T022250Z">
        <seg>レシーバを指定することも可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A regular expression literal is delimited by `/` and uses [PCRE](http://pcre.org/pcre.txt) syntax.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T015819Z" creationid="hirofumiwakasugi" creationdate="20150902T015819Z">
        <seg>正規表現リテラルは `/` で区切られ、[PCRE](http://pcre.org/pcre.txt) の記法を使うことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A slightly more interesting example is an HTTP Server:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072545Z" creationid="hirofumiwakasugi" creationdate="20150901T072545Z">
        <seg>もう少し興味深いプログラムを見てみましょう。こちらは HTTP サーバーの例になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A special `new` method is provided too:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021805Z" creationid="hirofumiwakasugi" creationdate="20150902T021455Z">
        <seg>また、`new` メソッドを使って作ることもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A special notation allows creating hashes with string keys:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143006Z" creationid="hirofumiwakasugi" creationdate="20150901T143006Z">
        <seg>キーが文字列である場合は、以下の特別な記法を使うことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A special notation allows creating hashes with symbol keys:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142945Z" creationid="hirofumiwakasugi" creationdate="20150901T142743Z">
        <seg>キーがシンボルである場合は、以下の特別な記法を使うことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A string can span multiple lines:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081302Z" creationid="hirofumiwakasugi" creationdate="20150901T081302Z">
        <seg>文字列は複数の行にまたがって記述することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Additionally, if your program reads a global variable before it was ever assigned a value it will also have the `Nil` type.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053832Z" creationid="hirofumiwakasugi" creationdate="20150902T053832Z">
        <seg>また、それまでに何も代入されていないグローバル変数をプログラムが読み込んだとき、その値は常に `Nil` 型になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternative you can use the `run` command:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072011Z" creationid="hirofumiwakasugi" creationdate="20150901T072011Z">
        <seg>また、`run` コマンドを使っても同様のことが可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, a backlash followed by a newline can be inserted inside the string literal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104106Z" creationid="hirofumiwakasugi" creationdate="20150901T104106Z">
        <seg>また、改行の前のバックスラッシュは文字列リテラルの中に書くこともできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An Array can have mixed types, meaning `T` will be a union of types, but these are determined when the array is created, either by specifying T or by using an array literal.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142526Z" creationid="hirofumiwakasugi" creationdate="20150901T132140Z">
        <seg>配列には異なる型の要素を含めることが可能で、そのとき `T` は複数の型の組み合わせとなります。ただ、その型は配列が作られたときに決定されます。つまり、配列の生成時に明示的に指定された `T` か、</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An [Array](http://crystal-lang.org/api/Array.html) is a generic type containing elements of a type `T`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T135935Z" creationid="hirofumiwakasugi" creationdate="20150901T131821Z">
        <seg>配列 ([Array](http://crystal-lang.org/api/Array.html)) は、その中に `T` 型の n 個の要素を含むことができる汎用的な型です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An alternative syntax is provided:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020206Z" creationid="hirofumiwakasugi" creationdate="20150902T020206Z">
        <seg>また、以下の記法を利用して書くことも可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An easy way to remember which one is inclusive and which one is exclusive it to think of the extra dot as if it pushes *y* further away, thus leaving it outside of the range.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T015144Z" creationid="hirofumiwakasugi" creationdate="20150902T014911Z">
        <seg>上記の「右側の値を含む/含まない」記法の簡単な覚え方を紹介します。ドットが1つ多くついているから、それだけ *y* が遠くに押し出されているのをイメージしてください。だからそのとき遠くの *y* は範囲に含まれない、というわけです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An integer literal is an optional `+` or `-` sign, followed by
a sequence of digits and underscores, optionally followed by a suffix.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052055Z" creationid="hirofumiwakasugi" creationdate="20150901T051705Z">
        <seg>整数リテラルは、`+` (オプション) または `-` 符号に続く数値とアンダースコアによって記述し、オプションでサフィックスを与えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And it is also available to indexers (`[]=`):</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060316Z" creationid="hirofumiwakasugi" creationdate="20150902T060316Z">
        <seg>インデックス指定の代入 (`[]=`) の場合にも同様に有効です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Arrays of strings can be created with a special syntax:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142920Z" creationid="hirofumiwakasugi" creationdate="20150901T140047Z">
        <seg>文字列の配列は特別な記法を使って書くことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Arrays of symbols can be created with a special syntax:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142913Z" creationid="hirofumiwakasugi" creationdate="20150901T140104Z">
        <seg>シンボルの配列は特別な記法を使って書くことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assignment is done with the equal (`=`) character.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053925Z" creationid="hirofumiwakasugi" creationdate="20150902T053925Z">
        <seg>代入にはイコール記号 (`=`) を使います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Binary numbers start with `0b`:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052521Z" creationid="hirofumiwakasugi" creationdate="20150901T052456Z">
        <seg>先頭に `0b` をつけると2進数になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But Crystal is written in Crystal itself! So you first need to use one of the previous described methods to have a running compiler.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T083214Z" creationid="hirofumiwakasugi" creationdate="20150831T083214Z">
        <seg>実は、Crystal は Crystal 自身によって書かれています！したがって、まずはこれまでに紹介した方法のいずれかを使ってコンパイラをインストールする必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Command:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072215Z" creationid="hirofumiwakasugi" creationdate="20150901T072215Z">
        <seg>Command:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Comments start with the sharp (`#`) character.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050558Z" creationid="hirofumiwakasugi" creationdate="20150901T050506Z">
        <seg>「`#`」の文字があると、その行はそれ以降がコメントになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Crystal files end with the `.cr` extension.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072004Z" creationid="hirofumiwakasugi" creationdate="20150901T072004Z">
        <seg>Crystal のファイルには `.cr` という拡張子がつきます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Crystal is a programming language that resembles Ruby but compiles to native code and tries to be much more efficient, at the cost of disallowing certain dynamic aspects of Ruby.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071526Z" creationid="hirofumiwakasugi" creationdate="20150831T050601Z">
        <seg>Crystal は Ruby とよく似たプログラミング言語ですが、ネイティブコードにコンパイルし、Ruby よりずっと効率的に動作するものを目指しています。一方で、そのために Ruby が持っている動的な機能についてはいくらか制限されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Download the file for your platform and uncompress it.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055747Z" creationid="hirofumiwakasugi" creationdate="20150831T055747Z">
        <seg>それぞれのプラットフォームに合わせて適切なファイルをダウンロードして展開してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each of the above kinds of variables will be explained later on.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054307Z" creationid="hirofumiwakasugi" creationdate="20150902T054307Z">
        <seg>上記のそれぞれの変数の種類については改めて説明します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>First you have to add the repository to your APT configuration.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071555Z" creationid="hirofumiwakasugi" creationdate="20150831T052657Z">
        <seg>まずは、公式の Crystal リポジトリを追加するために Apt を構成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>First you have to add the repository to your YUM configuration.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071623Z" creationid="hirofumiwakasugi" creationdate="20150831T055100Z">
        <seg>まずは、公式の Crystal リポジトリを追加するために Yum を構成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For easy setup just run in your command line:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T062024Z" creationid="hirofumiwakasugi" creationdate="20150831T052806Z">
        <seg>簡単にその設定を行うためのスクリプトを用意していますので、以下のコマンドをそのまま実行してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020139Z" creationid="hirofumiwakasugi" creationdate="20150902T020139Z">
        <seg>例をあげます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, reassigning a variable with a different expression makes it have that expression’s type:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053053Z" creationid="hirofumiwakasugi" creationdate="20150902T052132Z">
        <seg>例えば、次のようにローカル変数に別の式を再代入すると、その新しい式の型の変数となります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072338Z" creationid="hirofumiwakasugi" creationdate="20150901T072338Z">
        <seg>例:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>From this you can see that the main routine is simply the program itself: there's no need to define a "main" function or something similar.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072454Z" creationid="hirofumiwakasugi" creationdate="20150901T072454Z">
        <seg>このプログラムを見ればわかる通り、Crystal ではプログラム自体がメインルーチンとなります。つまり、「main」関数やそれに値するものを定義する必要はありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Global variables start with a dollar sign (`$`).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053517Z" creationid="hirofumiwakasugi" creationdate="20150902T053517Z">
        <seg>変数名の先頭にドル記号 (`$`) をつけるとグローバル変数になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>HTTP::Response.ok "text/plain", "Hello world! The time is #{Time.now}"
end</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072546Z" creationid="hirofumiwakasugi" creationdate="20150901T072546Z">
        <seg>HTTP::Response.ok "text/plain", "Hello world! The time is #{Time.now}"
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>HTTP::Server.new(8000) ...</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072631Z" creationid="hirofumiwakasugi" creationdate="20150901T072631Z">
        <seg>HTTP::Server.new(8000) ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>HTTP::Server.new(8080) do |request|</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072642Z" creationid="hirofumiwakasugi" creationdate="20150901T072642Z">
        <seg>HTTP::Server.new(8080) do |request|</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Hexadecimal numbers start with `0x`:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052550Z" creationid="hirofumiwakasugi" creationdate="20150901T052550Z">
        <seg>先頭に `0x` をつけると16進数になります</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If `MyType` is generic, the above is equivalent to this:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140506Z" creationid="hirofumiwakasugi" creationdate="20150901T140432Z">
        <seg>もし `MyType` が汎用的な型である場合は、上記は以下と同じ意味です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If `MyType` is not generic, the above is equivalent to this:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140416Z" creationid="hirofumiwakasugi" creationdate="20150901T140409Z">
        <seg>もし `MyType` が汎用的な型でない場合は、上記は以下と同じ意味です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If for any reason you can't or don't want to use one of the previous installation methods, you can still download Crystal in a standalone .tar.gz file with everything you need to get started.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055610Z" creationid="hirofumiwakasugi" creationdate="20150831T052600Z">
        <seg>何らかの理由で、これまで紹介した方法でインストールすることができない場合、.tar.gz ファイルをダウンロードする方法もあります。その中に、Crystal に必要なすべてのものが含まれています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no suffix is present, the literal's type is `Float64`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074014Z" creationid="hirofumiwakasugi" creationdate="20150901T074014Z">
        <seg>もしサフィックスがない場合は、リテラルの型は `Float64` になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no suffix is present, the literal's type is the lowest betwen `Int32`, `Int64` and `UInt64`
in which the number fits:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052257Z" creationid="hirofumiwakasugi" creationdate="20150901T051834Z">
        <seg>もしサフィックスがない場合は、リテラルの型は `Int32`/`Int64`/`UInt64`のいずれかのうち、数値に合致する最も小さいものになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the left-hand side contains just one variable, the right-hand side is considered an array:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060149Z" creationid="hirofumiwakasugi" creationdate="20150902T060132Z">
        <seg>それでは、もし左辺に1つの変数しかないときはどうでしょうか。その場合には、右辺が配列であると解釈されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the method has arguments, you must specify their types:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022124Z" creationid="hirofumiwakasugi" creationdate="20150902T022124Z">
        <seg>引数を持つメソッドの場合は、その型を指定する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the right-hand side contains just one expression, it is considered an indexed type and the following syntax sugar applies:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060158Z" creationid="hirofumiwakasugi" creationdate="20150902T055855Z">
        <seg>もし代入文の右辺に1つの式しかないときにはどうなるのでしょうか。その場合には、インデックスを持つ型だと解釈され、以下のシンタックスシュガーが適用されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are using Mac and the Homebrew formula, this will be automatically configured for you if you install Crystal adding `--with-llvm` flag.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T062345Z" creationid="hirofumiwakasugi" creationdate="20150831T060425Z">
        <seg>もし Mac を使っていて Homebrew のフォーミュラからインストールする場合は、`--with-llvm` フラグを与えてインストールすれば LLVM が自動的に構成されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you need to write a string that has many double quotes, parenthesis, or similar
characters, you can use alternative literals:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104420Z" creationid="hirofumiwakasugi" creationdate="20150901T104420Z">
        <seg>もし文字列にダブルクォートやカッコなどの文字が多く含まれている場合には、次のような形式でリテラルを書くこともできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you prefer to do it manually execute:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053622Z" creationid="hirofumiwakasugi" creationdate="20150831T052947Z">
        <seg>もし手動で構成したいのであれば、以下の操作を実行してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to contribute then you might want to install Crystal from sources.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T062357Z" creationid="hirofumiwakasugi" creationdate="20150831T060128Z">
        <seg>もしコントリビュートしたいと考えているのであれば、Crystal をソースコードからインストールしたくなることと思います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you're planning to contribute to the project you might find useful to install LLVM as well.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055330Z" creationid="hirofumiwakasugi" creationdate="20150831T055330Z">
        <seg>もしプロジェクトにコントリビュートしたいのであれば、同時に LLVM もインストールしておくとよいでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Debian derived distributions, you can use the official Crystal repository.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T052645Z" creationid="hirofumiwakasugi" creationdate="20150831T052645Z">
        <seg>Debian 系のディストリビューションでは、公式の Crystal リポジトリを利用してインストールすることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In RedHat derived distributions, you can use the official Crystal repository.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055048Z" creationid="hirofumiwakasugi" creationdate="20150831T055045Z">
        <seg>RedHat 系のディストリビューションでは、公式の Crystal リポジトリを利用してインストールすることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In code examples, the comment `#=&gt;` is used to show the value of an expression.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072316Z" creationid="hirofumiwakasugi" creationdate="20150901T072316Z">
        <seg>コードの例では、ある式の結果の値を示すために `#=&gt;` というコメントを使用します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In general, they are just value holders associated with the type that the programmer expects them to have according to their location and usage on the program.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060839Z" creationid="hirofumiwakasugi" creationdate="20150902T052052Z">
        <seg>どういうことかというと、一般的にローカル変数というのは単純に型の情報を持った値の入れ物のようなものと考えることができて、プログラムにおけるそれぞれの場所や用途に応じてその入れ物の型も変化するということです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the case of a generic type, the type arguments can be specified too:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140601Z" creationid="hirofumiwakasugi" creationdate="20150901T140601Z">
        <seg>汎用的な型である場合には、型引数を指定することも可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the latter case, T will be set to the union of the array literal elements.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140016Z" creationid="hirofumiwakasugi" creationdate="20150901T135656Z">
        <seg>配列リテラルで生成した場合であれば、リテラルの要素の型の組み合わせによって型が決まります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the latter case, `K` will be set to the union of the hash literal keys, and `V` will be set to the union of the hash literal values.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142449Z" creationid="hirofumiwakasugi" creationdate="20150901T142332Z">
        <seg>ハッシュリテラルで生成した場合であれば、リテラルのキーと値それぞれの型の組み合わせによって型が決まります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the next sections a dollar sign (`$`) denotes the command line.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071925Z" creationid="hirofumiwakasugi" creationdate="20150901T071925Z">
        <seg>なお、以降ではドル記号 (`$`) でコマンドラインを示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this case, leading whitespace is not included in the resulting string.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104227Z" creationid="hirofumiwakasugi" creationdate="20150901T104227Z">
        <seg>この場合、先頭の空白が結果の文字列に含まれることはありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Inside it you will have a `bin/crystal` executable.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055805Z" creationid="hirofumiwakasugi" creationdate="20150831T055805Z">
        <seg>その中に、`bin/crystal` という実行ファイルが含まれています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Inside the repository you will also find a wrapper script at `bin/crystal`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060933Z" creationid="hirofumiwakasugi" creationdate="20150831T060755Z">
        <seg>リポジトリの中を見ると、`bin/crystal` というラッパースクリプトが存在することに気づくと思います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Internally a symbol is represented as an `Int32`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T131554Z" creationid="hirofumiwakasugi" creationdate="20150901T131529Z">
        <seg>内部的には、シンボルは `Int32` で表現されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It can be followed by these modifiers:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T015949Z" creationid="hirofumiwakasugi" creationdate="20150902T015847Z">
        <seg>また、正規表現リテラルにはオプションを追加することも可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is created by enclosing an UTF-8 character in single quotes.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074441Z" creationid="hirofumiwakasugi" creationdate="20150901T074441Z">
        <seg>UTF-8 の文字をシングルクォートで囲んで記述します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is typically created with a hash literal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140851Z" creationid="hirofumiwakasugi" creationdate="20150901T140851Z">
        <seg>通常、以下のハッシュリテラルを利用して書きます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is typically created with a proc literal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021043Z" creationid="hirofumiwakasugi" creationdate="20150902T021043Z">
        <seg>通常、Proc リテラルを使って生成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is typically created with an array literal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T135948Z" creationid="hirofumiwakasugi" creationdate="20150901T131939Z">
        <seg>通常、以下の配列リテラルを利用して書きます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It occupies 32 bits.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074303Z" creationid="hirofumiwakasugi" creationdate="20150901T074230Z">
        <seg>そのビット数は32ビットです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's start with two examples to familiarize ourselves with the language.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072409Z" creationid="hirofumiwakasugi" creationdate="20150901T072409Z">
        <seg>それでは、まずはこれから紹介する2つのプログラムの例を見ながら、Crystal に親しんでいきましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Local variables start with lowercase letters.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053623Z" creationid="hirofumiwakasugi" creationdate="20150902T051653Z">
        <seg>変数名の先頭が小文字の変数はローカル変数です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Make sure to always use `--release` for production-ready executables and when performing benchmarks.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072118Z" creationid="hirofumiwakasugi" creationdate="20150901T072118Z">
        <seg>したがって、プロダクションでの利用やベンチマークを測定するような場合には、必ず `--release` をつけるようにしてください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Make sure to install [all the required libraries](https://github.com/manastech/crystal/wiki/All-required-libraries).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060736Z" creationid="hirofumiwakasugi" creationdate="20150831T060736Z">
        <seg>ただし、 [「すべての必要なライブラリ」](https://github.com/manastech/crystal/wiki/All-required-libraries)がインストールされている必要があることに注意してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multiple assignment is also available to methods that end with `=`:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060243Z" creationid="hirofumiwakasugi" creationdate="20150902T060243Z">
        <seg>多重代入は、メソッド名が `=` で終わるメソッドに対しても有効です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that `||` and `&amp;&amp;` use the `[]?` method to check for key prescence.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055045Z" creationid="hirofumiwakasugi" creationdate="20150902T055045Z">
        <seg>このとき、`||` と `&amp;&amp;` は、キーの存在チェックのために `[]?` メソッドを使うことに注意してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that because expressions are assigned to temporary variables it is possible to exchange variables’ contents in a single line:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055737Z" creationid="hirofumiwakasugi" creationdate="20150902T055732Z">
        <seg>また、式は一時的な変数に代入される仕組みになっているため、次のように1行で変数の値を交換することも可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that in the above example trailing and leading spaces, as well as newlines,
end up in the resulting string.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T103911Z" creationid="hirofumiwakasugi" creationdate="20150901T081345Z">
        <seg>上記の例で、先頭と末尾の空白、および改行が結果の文字列にも入っていることに注目してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Octal numbers start with a zero:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052538Z" creationid="hirofumiwakasugi" creationdate="20150901T052506Z">
        <seg>先頭にゼロをつけると8進数になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Once you [install](../installation/README.md) the compiler you will have a `crystal` binary at your disposal.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071919Z" creationid="hirofumiwakasugi" creationdate="20150901T071919Z">
        <seg>[インストール](../installation/README.md)が済んでいれば、`crystal` というバイナリを利用することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Once you install the compiler using one of the following methods, make sure to read [Using the compiler](../using_the_compiler/README.md) to learn how to efficiently use it.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T085710Z" creationid="hirofumiwakasugi" creationdate="20150831T053948Z">
        <seg>Crystal のコンパイラは以下のいずれかの方法でインストールすることができます。インストール後は、[「コンパイラを使用する」](../using_the_compiler/README.md)を読んで、コンパイラの活用方法について知りましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only one-line comments are supported for now.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T073236Z" creationid="hirofumiwakasugi" creationdate="20150901T050651Z">
        <seg>現在のところ、1行 (one-line) のコメントのみがサポートされています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Options:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072225Z" creationid="hirofumiwakasugi" creationdate="20150901T072225Z">
        <seg>Options:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Or you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104703Z" creationid="hirofumiwakasugi" creationdate="20150901T080209Z">
        <seg>波カッコ (ブレース) を使うと、(0 から 10FFFF までの) 16進数を指定することも可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Regular expressions are represented by the [Regex](http://crystal-lang.org/api/Regex.html) class, which is usually created with a literal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T015736Z" creationid="hirofumiwakasugi" creationdate="20150902T015736Z">
        <seg>正規表現 (Regular Expression) を表すのは [Regex](http://crystal-lang.org/api/Regex.html) クラスです。そして、通常それは以下の正規表現リテラルによって作られます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Several literals are available for creating many basic types in the language.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T080459Z" creationid="hirofumiwakasugi" creationdate="20150901T050812Z">
        <seg>Crystal には、数多くの基本的な型に対応したリテラルが用意されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Slashes must be escaped:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020149Z" creationid="hirofumiwakasugi" creationdate="20150902T020149Z">
        <seg>スラッシュはエスケープする必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So replace the last line with:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055359Z" creationid="hirofumiwakasugi" creationdate="20150831T055353Z">
        <seg>その場合、最後の行を以下の通りに変更してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some syntax sugar that contains the `=` character is available:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054415Z" creationid="hirofumiwakasugi" creationdate="20150902T054404Z">
        <seg>`=` を使った代入のためのシンタックスシュガーがいくつか用意されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That will add the signing key and the repository configuration.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053547Z" creationid="hirofumiwakasugi" creationdate="20150831T052935Z">
        <seg>これで、署名用のキーとリポジトリの設定が追加されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The [Nil](http://crystal-lang.org/api/Nil.html) type has only one possible value:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050944Z" creationid="hirofumiwakasugi" creationdate="20150901T050932Z">
        <seg>[Nil](http://crystal-lang.org/api/Nil.html) 型にはたった1つの値しか存在しません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The `=` operator syntax sugar is also available to setters and indexers.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054952Z" creationid="hirofumiwakasugi" creationdate="20150902T054952Z">
        <seg>セッターやインデックス指定代入の場合にも、`=` 演算子のシンタックスシュガーを利用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The above code will make sense once you read the whole documentation, but we can already learn some things.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072553Z" creationid="hirofumiwakasugi" creationdate="20150901T072553Z">
        <seg>上記のコードをすべて理解するためにはこのドキュメント全体を読む必要がありますが、ここでいくつかの点について説明しておきます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The classic "hello world" program looks like this in Crystal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072503Z" creationid="hirofumiwakasugi" creationdate="20150901T072444Z">
        <seg>伝統的な「hello world」プログラムを Crystal で書くと次のようになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The language comes with other [syntax](../syntax_and_semantics/literals.html) as well to create arrays, hashes, ranges, tuples and more:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072711Z" creationid="hirofumiwakasugi" creationdate="20150901T072711Z">
        <seg>Crystal にはその他にも多くの[シンタックス](../syntax_and_semantics/literals.html)があります。例えば、array や hash、そして range や tuple などです</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The latest files can be found on the Releases page at GitHub: https://github.com/manastech/crystal/releases</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055658Z" creationid="hirofumiwakasugi" creationdate="20150831T055658Z">
        <seg>最新のファイルは [GitHub のリリースページ](https://github.com/manastech/crystal/releases)から入手することが可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The new compiler will be placed at `.build/crystal`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060627Z" creationid="hirofumiwakasugi" creationdate="20150831T060619Z">
        <seg>ビルドされたコンパイラは `.build/crystal` に格納されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The number of arguments must match the proc's type:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022011Z" creationid="hirofumiwakasugi" creationdate="20150902T021953Z">
        <seg>そのとき、引数の数は Proc の型と一致している必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The program’s source code must be encoded in UTF-8.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050358Z" creationid="hirofumiwakasugi" creationdate="20150901T050314Z">
        <seg>プログラムのソースコードは UTF-8 でエンコードされている必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The reason for this is that performance without full optimizations is still pretty good and provides fast compile times, so you can use the `crystal` command almost as if it were an interpreter.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072131Z" creationid="hirofumiwakasugi" creationdate="20150901T072131Z">
        <seg>このような動作となっている理由は、完全最適化をしない場合にも、ある程度十分なパフォーマンスを維持したままで高速なコンパイルが可能であるため、まるでインタープリタのように `crystal` コマンドを使用することができるからです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The return type is inferred from the proc's body.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021428Z" creationid="hirofumiwakasugi" creationdate="20150902T021428Z">
        <seg>戻り値の型は Proc の内容から推論されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The types of the arguments are mandatory, except when directly sending a proc literal to a lib `fun` in C bindings.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021347Z" creationid="hirofumiwakasugi" creationdate="20150902T021123Z">
        <seg>引数の型指定は必須です。ただし、C バインディングでライブラリの `fun` に直接 Proc リテラルを渡すときだけは例外です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The underscore `_` before the suffix is optional.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052345Z" creationid="hirofumiwakasugi" creationdate="20150901T052342Z">
        <seg>サフィックスの前のアンダースコア (`_`) はオプションです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Their type is inferred from their usage, not only from their initializer.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060632Z" creationid="hirofumiwakasugi" creationdate="20150902T051932Z">
        <seg>ローカル変数の型は、初期化されるときだけではなく、その用途にしたがって推論されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Their type is the combined type of all expressions that were assigned to them.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053719Z" creationid="hirofumiwakasugi" creationdate="20150902T053719Z">
        <seg>型は代入された式の型を組み合わせたものになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then clone the repository:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060509Z" creationid="hirofumiwakasugi" creationdate="20150831T060509Z">
        <seg>それから、リポジトリをクローンします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then you can invoke the compiler by just typing `crystal`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060004Z" creationid="hirofumiwakasugi" creationdate="20150831T060004Z">
        <seg>こうしておけば、`crystal` と入力するだけでコンパイラを起動することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are four signed integer types: [Int8](http://crystal-lang.org/api/Int8.html), [Int16](http://crystal-lang.org/api/Int16.html), [Int32](http://crystal-lang.org/api/Int32.html) and [Int64](http://crystal-lang.org/api/Int64.html), being able to represent numbers of 8, 16, 32 and 64 bits respectively.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T073354Z" creationid="hirofumiwakasugi" creationdate="20150901T051549Z">
        <seg>符号付き整数 (Integer) 型には4種類のものがあります。それは、[Int8](http://crystal-lang.org/api/Int8.html)、[Int16](http://crystal-lang.org/api/Int16.html)、[Int32](http://crystal-lang.org/api/Int32.html) そして [Int64](http://crystal-lang.org/api/Int64.html)で、それぞれ 8/16/32/64 ビットの数値を表現することが可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are four unsigned integer types: [UInt8](http://crystal-lang.org/api/UInt8.html), [UInt16](http://crystal-lang.org/api/UInt16.html), [UInt32](http://crystal-lang.org/api/UInt32.html) and [UInt64](http://crystal-lang.org/api/UInt64.html).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T051737Z" creationid="hirofumiwakasugi" creationdate="20150901T051628Z">
        <seg>符号なし整数型にも、[UInt8](http://crystal-lang.org/api/UInt8.html)、[UInt16](http://crystal-lang.org/api/UInt16.html)、[UInt32](http://crystal-lang.org/api/UInt32.html) そして [UInt64](http://crystal-lang.org/api/UInt64.html) の4種類が存在します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are two floating point types, [Float32](http://crystal-lang.org/api/Float32.html) and [Float64](http://crystal-lang.org/api/Float64.html),
which correspond to the [binary32](http://en.wikipedia.org/wiki/Single_precision_floating-point_format)
and [binary64](http://en.wikipedia.org/wiki/Double_precision_floating-point_format)
types defined by IEEE.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T073612Z" creationid="hirofumiwakasugi" creationdate="20150901T073309Z">
        <seg>浮動小数点数 (Float) には2つの種類があります。それは、[Float32](http://crystal-lang.org/api/Float32.html) と [Float64](http://crystal-lang.org/api/Float64.html) で、それぞれ IEEE によって定義されている [binary32](http://en.wikipedia.org/wiki/Single_precision_floating-point_format) と [binary64](http://en.wikipedia.org/wiki/Double_precision_floating-point_format) に対応しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They are constructed using these literals:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T051223Z" creationid="hirofumiwakasugi" creationdate="20150901T051038Z">
        <seg>以下のようなリテラルで利用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They are declared when you first assign them a value.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053532Z" creationid="hirofumiwakasugi" creationdate="20150902T051744Z">
        <seg>その宣言は、はじめて値が代入されたときに行われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T105524Z" creationid="hirofumiwakasugi" creationdate="20150901T105524Z">
        <seg>このとき、`#{...}` で囲まれた式に対して、`Object#to_s(IO)` が実行されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This form allows you to specify the return type and to check it against the proc's body.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021835Z" creationid="hirofumiwakasugi" creationdate="20150902T021555Z">
        <seg>この形式の場合、戻り値の型を指定することができるため、Proc の本体の戻り値が正しい型であるかをチェックすることが可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is the documentation for the Crystal programming language.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T083707Z" creationid="hirofumiwakasugi" creationdate="20150831T050600Z">
        <seg>本ドキュメントは「Crystal」というプログラミング言語について記載するものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This script will execute the global installed compiler or the one that you just compiled (if present).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T061628Z" creationid="hirofumiwakasugi" creationdate="20150831T060757Z">
        <seg>このスクリプトは、グローバルにインストールされたコンパイラ、もしくは自分でビルドしたコンパイラがあればそれを実行します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This will create a `some_program` file that you can execute:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072037Z" creationid="hirofumiwakasugi" creationdate="20150901T072037Z">
        <seg>上記では、`some_program` という実行ファイルが作成され、以下のようにして実行することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Time.now</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072631Z" creationid="hirofumiwakasugi" creationdate="20150901T072631Z">
        <seg>Time.now</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To avoid this, you can split a string into multiple lines
by joining multiple literals with a backslash:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104022Z" creationid="hirofumiwakasugi" creationdate="20150901T104022Z">
        <seg>これを避けたければ、複数行の文字列リテラルをバックスラッシュで結合することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To build your own version of the compiler, run `make`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060550Z" creationid="hirofumiwakasugi" creationdate="20150831T060550Z">
        <seg>コンパイラをビルドするときは、`make` を実行してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To compile and run a program in a single shot you can invoke `crystal` with a single filename:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071951Z" creationid="hirofumiwakasugi" creationdate="20150901T071951Z">
        <seg>ファイル名を1つ指定して `crystal` コマンドを実行することで、プログラムのコンパイルと実行を一発で行うことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To create a String with embedded expressions, you can use string interpolation:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T105432Z" creationid="hirofumiwakasugi" creationdate="20150901T105432Z">
        <seg>文字列の中には式を埋め込むことが可能です。これを文字列埋め込み (文字列補完/String Interpolation
) といいます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To create an empty tuple use [Tuple.new](http://crystal-lang.org/api/Tuple.html#new%28%2Aargs%29-class-method).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020813Z" creationid="hirofumiwakasugi" creationdate="20150902T020813Z">
        <seg>空のタプルを作りたい場合は、[Tuple.new](http://crystal-lang.org/api/Tuple.html#new%28%2Aargs%29-class-method) を使用してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To create an executable use the `build` command:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072028Z" creationid="hirofumiwakasugi" creationdate="20150901T072028Z">
        <seg>実行ファイルを作成するには `build` コマンドを使用します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To easily install Crystall on Mac you can use our [Homebrew](http://brew.sh/) [tap](https://github.com/Homebrew/homebrew/wiki/brew-tap)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055250Z" creationid="hirofumiwakasugi" creationdate="20150831T055250Z">
        <seg>Mac に Crystal をインストールする場合、[Homebrew](http://brew.sh/) の [tap](https://github.com/Homebrew/homebrew/wiki/brew-tap) を用意しているので、それを利用すると簡単です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To invoke a Proc, you invoke the `call` method on it.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021926Z" creationid="hirofumiwakasugi" creationdate="20150902T021916Z">
        <seg>Proc を実行するときは `call` メソッドを使います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To make it simpler to use, you can create a symbolic link available in the path:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055933Z" creationid="hirofumiwakasugi" creationdate="20150831T055850Z">
        <seg>実行ファイルに対して、パスの通った場所のシンボリックを貼っておけば、より簡単に利用することができるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To see the available options for a particuar command, use `--help` after a command:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072224Z" creationid="hirofumiwakasugi" creationdate="20150901T072224Z">
        <seg>あるコマンドに対して有効なオプションを確認するには、コマンドに続けて `--help` を入力してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To see the full set of commands, invoke `crystal` without arguments.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072209Z" creationid="hirofumiwakasugi" creationdate="20150901T072209Z">
        <seg>すべてのコマンドを確認するには、`crystal` コマンドを引数なしで実行してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To turn optimizations on, use the `--release` flag:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072106Z" creationid="hirofumiwakasugi" creationdate="20150901T072106Z">
        <seg>最適化を有効にしたければ、`--release` フラグを与える必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Underscores are allowed at the beginning of a variable name, but these names are reserved for the compiler, so their use is not recommended (and it also makes the code uglier to read).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053355Z" creationid="hirofumiwakasugi" creationdate="20150902T052940Z">
        <seg>アンダースコアを変数名の先頭につけることも可能ですが、それらの名前はコンパイラによって予約されているため、先頭がアンダースコアの変数名は推奨されません (コードの見た目や読みやすさという点でもあまり美しくないですよね) 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Underscores can be used to make some numbers more readable:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052402Z" creationid="hirofumiwakasugi" creationdate="20150901T052402Z">
        <seg>アンダースコアは、数値を読みやすくするためにも利用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Use the `init` command to create a Crystal project with the standard directory structure.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072144Z" creationid="hirofumiwakasugi" creationdate="20150901T072144Z">
        <seg>`init` コマンドを使用すると、標準的なディレクトリ構成を持った Crystal プロジェクトを作成おすることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When a new Crystal version is released you can upgrade your system using:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053319Z" creationid="hirofumiwakasugi" creationdate="20150831T053319Z">
        <seg>新しいバージョンの Crystal がリリースされた場合には、以下でアップグレードすることが可能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When creating an empty array you must always specify T:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142531Z" creationid="hirofumiwakasugi" creationdate="20150901T135810Z">
        <seg>空の配列を作りたいときには、必ず `T` を指定しなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When creating an empty hash you must always specify `K` and `V`:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142507Z" creationid="hirofumiwakasugi" creationdate="20150901T142456Z">
        <seg>空のハッシュを作りたいときには、必ず `K` と `V` を指定しなければなりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can declare/assign multiple variables at the same time by separating expressions with a comma (`,`):</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055429Z" creationid="hirofumiwakasugi" creationdate="20150902T055400Z">
        <seg>複数の式をカンマ記号 (`,`) で区切って代入すると、複数の変数に対して同時に宣言/代入を行うことができます (多重代入) 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can read this document from top to bottom, but it’s advisable to jump through sections because some concepts are interrelated and can’t be explained in isolation.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072303Z" creationid="hirofumiwakasugi" creationdate="20150901T071512Z">
        <seg>本ドキュメントは基本的に最初から順番に読んでいけるように構成されています。ただ、コンセプトによっては、それぞれのコンセプトが相互に関連していて、どうしても単独では説明が難しいものがあります。そういった場合には、順番にこだわらず、別のセクションにジャンプしながら読み進めるのがよいでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T080733Z" creationid="hirofumiwakasugi" creationdate="20150901T075458Z">
        <seg>「*u*」に続けてバックスラッシュと16進数で4つの数値を入力することでコードポイントを示すこともできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use a backslash followed by at most three digits to denote a code point written in octal:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T075508Z" creationid="hirofumiwakasugi" creationdate="20150901T074606Z">
        <seg>バックスラッシュに続けて最大3つの数値を入力すると、8進数でコードポイントを指定することになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use a backslash to denote some characters:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074550Z" creationid="hirofumiwakasugi" creationdate="20150901T074550Z">
        <seg>いくつかの文字はバックスラッシュを使って表します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use a special array literal syntax with other types too, as long as they define an argless `new` method and a `&lt;&lt;` method:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143104Z" creationid="hirofumiwakasugi" creationdate="20150901T140211Z">
        <seg>配列が持つ特別なシンタックスを他の型で使うこともできます。ただし、引数のない `new` と `&lt;&lt;` メソッドが定義されている必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use a special hash literal syntax with other types too, as long as they define an argless `new` method and a `[]=` method:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143049Z" creationid="hirofumiwakasugi" creationdate="20150901T143030Z">
        <seg>ハッシュが持つ特別なシンタックスを他の型で使うこともできます。ただし、引数のない `new` と `[]=` メソッドが定義されている必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might also want to read the [contributing guide](https://github.com/manastech/crystal/blob/master/Contributing.md).</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T061648Z" creationid="hirofumiwakasugi" creationdate="20150831T060755Z">
        <seg>また、[コントリビューティング・ガイド](https://github.com/manastech/crystal/blob/master/Contributing.md) にも目を通しておくとよいでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You will also need LLVM 3.5 present in the path.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060327Z" creationid="hirofumiwakasugi" creationdate="20150831T060327Z">
        <seg>また、あわせて LLVM 3.5 も必要です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[Bool](http://crystal-lang.org/api/Bool.html) has only two possible values: `true` and `false`.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022703Z" creationid="hirofumiwakasugi" creationdate="20150901T051015Z">
        <seg>真偽値 ([Bool](http://crystal-lang.org/api/Bool.html)) には2つだけ値が存在します。それは `true` と `false` です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T052826Z" creationid="hirofumiwakasugi" creationdate="20150831T052826Z">
        <seg>```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
$ ./some_program
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072039Z" creationid="hirofumiwakasugi" creationdate="20150901T072039Z">
        <seg>```
$ ./some_program
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
$ crystal
Usage: crystal [command] [switches] [program file] [--] [arguments]</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072215Z" creationid="hirofumiwakasugi" creationdate="20150901T072215Z">
        <seg>```
$ crystal
Usage: crystal [command] [switches] [program file] [--] [arguments]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
$ crystal build --help
Usage: crystal build [options] [programfile] [--] [arguments]</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072225Z" creationid="hirofumiwakasugi" creationdate="20150901T072225Z">
        <seg>```
$ crystal build --help
Usage: crystal build [options] [programfile] [--] [arguments]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
$ crystal build some_program.cr
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072032Z" creationid="hirofumiwakasugi" creationdate="20150901T072032Z">
        <seg>```
$ crystal build some_program.cr
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
$ crystal build some_program.cr --release
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072050Z" creationid="hirofumiwakasugi" creationdate="20150901T072050Z">
        <seg>```
$ crystal build some_program.cr --release
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
$ crystal init lib MyCoolLib</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072145Z" creationid="hirofumiwakasugi" creationdate="20150901T072145Z">
        <seg>```
$ crystal init lib MyCoolLib</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
$ crystal run some_program.cr
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072015Z" creationid="hirofumiwakasugi" creationdate="20150901T072015Z">
        <seg>```
$ crystal run some_program.cr
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
$ crystal some_program.cr
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T071953Z" creationid="hirofumiwakasugi" creationdate="20150901T071953Z">
        <seg>```
$ crystal some_program.cr
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
* You can define [local variables](../syntax_and_semantics/local_variables.html) without the need to specify their type:</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072614Z" creationid="hirofumiwakasugi" creationdate="20150901T072614Z">
        <seg>```
* 型を指定することなく[ローカル変数](../syntax_and_semantics/local_variables.html)を定義することができます</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
apt-key adv --keyserver keys.gnupg.net --recv-keys 09617FD37CC06B54
echo "deb http://dist.crystal-lang.org/apt crystal main" &gt; /etc/apt/sources.list.d/crystal.list
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053122Z" creationid="hirofumiwakasugi" creationdate="20150831T053122Z">
        <seg>```
apt-key adv --keyserver keys.gnupg.net --recv-keys 09617FD37CC06B54
echo "deb http://dist.crystal-lang.org/apt crystal main" &gt; /etc/apt/sources.list.d/crystal.list
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
brew install crystal-lang --with-llvm
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055354Z" creationid="hirofumiwakasugi" creationdate="20150831T055354Z">
        <seg>```
brew install crystal-lang --with-llvm
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
brew tap manastech/crystal
brew update
brew install crystal-lang
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055251Z" creationid="hirofumiwakasugi" creationdate="20150831T055251Z">
        <seg>```
brew tap manastech/crystal
brew update
brew install crystal-lang
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
git clone https://github.com/manastech/crystal.git
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060510Z" creationid="hirofumiwakasugi" creationdate="20150831T060510Z">
        <seg>```
git clone https://github.com/manastech/crystal.git
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
name, age, source = "Crystal,1,github".split(",")</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060038Z" creationid="hirofumiwakasugi" creationdate="20150902T060038Z">
        <seg>```
name, age, source = "Crystal,1,github".split(",")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
rpm --import http://dist.crystal-lang.org/rpm/RPM-GPG-KEY</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055109Z" creationid="hirofumiwakasugi" creationdate="20150831T055109Z">
        <seg>```
rpm --import http://dist.crystal-lang.org/rpm/RPM-GPG-KEY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
sudo apt-get install crystal
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053130Z" creationid="hirofumiwakasugi" creationdate="20150831T053130Z">
        <seg>```
sudo apt-get install crystal
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
sudo apt-get update
sudo apt-get install crystal
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T053324Z" creationid="hirofumiwakasugi" creationdate="20150831T053324Z">
        <seg>```
sudo apt-get update
sudo apt-get install crystal
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
sudo yum install crystal
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055112Z" creationid="hirofumiwakasugi" creationdate="20150831T055112Z">
        <seg>```
sudo yum install crystal
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```
sudo yum update crystal
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055113Z" creationid="hirofumiwakasugi" creationdate="20150831T055113Z">
        <seg>```
sudo yum update crystal
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072605Z" creationid="hirofumiwakasugi" creationdate="20150901T072605Z">
        <seg>```ruby</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
"\"" # double quote
"\\" # backslash
"\e" # escape
"\f" # form feed
"\n" # newline
"\r" # carriage return
"\t" # tab
"\v" # vertical tab
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081136Z" creationid="hirofumiwakasugi" creationdate="20150901T081136Z">
        <seg>```ruby
"\"" # ダブルクォート
"\\" # バックスラッシュ
"\e" # エスケープ
"\f" # フォームフィード (改ページ)
"\n" # ニューライン (改行)
"\r" # キャリッジリターン (復帰)
"\t" # タブ
"\v" # 垂直タブ
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
"\101" # == "A"
"\123" # == "S"
"\12"  # == "\n"
"\1"   # string with one character with code point 1
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081234Z" creationid="hirofumiwakasugi" creationdate="20150901T081151Z">
        <seg>```ruby
"\101" # == "A"
"\123" # == "S"
"\12"  # == "\n"
"\1"   # コードポイント1の文字が1つだけの文字列
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
"\u0041" # == "A"
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081237Z" creationid="hirofumiwakasugi" creationdate="20150901T081237Z">
        <seg>```ruby
"\u0041" # == "A"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
"\u{41}"    # == "A"
"\u{1F52E}" # == "  "
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081239Z" creationid="hirofumiwakasugi" creationdate="20150901T081239Z">
        <seg>```ruby
"\u{41}"    # == "A"
"\u{1F52E}" # == "  "
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
"hello</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081303Z" creationid="hirofumiwakasugi" creationdate="20150901T081303Z">
        <seg>```ruby
"hello</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
"hello " \
"world, " \
"no newlines" # same as "hello world, no newlines"
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104033Z" creationid="hirofumiwakasugi" creationdate="20150901T104033Z">
        <seg>```ruby
"hello " \
"world, " \
"no newlines" # "hello world, no newlines" と同じ
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
"hello \</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104110Z" creationid="hirofumiwakasugi" creationdate="20150901T104110Z">
        <seg>```ruby
"hello \</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
"hello world"
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081028Z" creationid="hirofumiwakasugi" creationdate="20150901T081028Z">
        <seg>```ruby
"hello world"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
# A proc without arguments
-&gt;{ 1 } # Proc(Int32)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021054Z" creationid="hirofumiwakasugi" creationdate="20150902T021054Z">
        <seg>```ruby
# 引数のない Proc
-&gt;{ 1 } # Proc(Int32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
# A setter
person.name=("John")</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054642Z" creationid="hirofumiwakasugi" creationdate="20150902T054642Z">
        <seg>```ruby
# セッター
person.name=("John")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
# Assigns to a local variable
local = 1</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053942Z" creationid="hirofumiwakasugi" creationdate="20150902T053942Z">
        <seg>```ruby
# ローカル変数への代入
local = 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
# Supports double quotes and nested parenthesis
%(hello ("world")) # same as "hello (\"world\")"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104749Z" creationid="hirofumiwakasugi" creationdate="20150901T104517Z">
        <seg>```ruby
# ダブルクォートと入れ子のカッコを含む
%(hello ("world")) # "hello (\"world\")" と同じ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
# This is a comment
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050709Z" creationid="hirofumiwakasugi" creationdate="20150901T050709Z">
        <seg>```ruby
# This is a comment
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
$year = 2014
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T053631Z" creationid="hirofumiwakasugi" creationdate="20150902T053631Z">
        <seg>```ruby
$year = 2014
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
%i(one two three) # [:one, :two, :three]
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140106Z" creationid="hirofumiwakasugi" creationdate="20150901T140106Z">
        <seg>```ruby
%i(one two three) # [:one, :two, :three]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
%w(one two three) # ["one", "two", "three"]
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140049Z" creationid="hirofumiwakasugi" creationdate="20150901T140049Z">
        <seg>```ruby
%w(one two three) # ["one", "two", "three"]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
'\'' # single quote
'\\' # backslash
'\e' # escape
'\f' # form feed
'\n' # newline
'\r' # carriage return
'\t' # tab
'\v' # vertical tab
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074837Z" creationid="hirofumiwakasugi" creationdate="20150901T074605Z">
        <seg>```ruby
'\'' # シングルクォート
'\\' # バックスラッシュ
'\e' # エスケープ
'\f' # フォームフィード (改ページ)
'\n' # ニューライン (改行)
'\r' # キャリッジリターン (復帰)
'\t' # タブ
'\v' # 垂直タブ
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
'\101' # == 'A'
'\123' # == 'S'
'\12'  # == '\n'
'\1'   # code point 1
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081211Z" creationid="hirofumiwakasugi" creationdate="20150901T074839Z">
        <seg>```ruby
'\101' # == 'A'
'\123' # == 'S'
'\12'  # == '\n'
'\1'   # コードポイント1
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
'\u0041' # == 'A'
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T080201Z" creationid="hirofumiwakasugi" creationdate="20150901T080201Z">
        <seg>```ruby
'\u0041' # == 'A'
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
'\u{41}'    # == 'A'
'\u{1F52E}' # == '  '
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T080332Z" creationid="hirofumiwakasugi" creationdate="20150901T080332Z">
        <seg>```ruby
'\u{41}'    # == 'A'
'\u{1F52E}' # == '  '
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
'a'
'z'
'0'
'_'
'あ'
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074515Z" creationid="hirofumiwakasugi" creationdate="20150901T074515Z">
        <seg>```ruby
'a'
'z'
'0'
'_'
'あ'
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
0123 # == 83
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052539Z" creationid="hirofumiwakasugi" creationdate="20150901T052539Z">
        <seg>```ruby
0123 # == 83
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
0b1101 # == 13
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052456Z" creationid="hirofumiwakasugi" creationdate="20150901T052456Z">
        <seg>```ruby
0b1101 # == 13
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
0xFE012D # == 16646445
0xfe012d # == 16646445
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052550Z" creationid="hirofumiwakasugi" creationdate="20150901T052550Z">
        <seg>```ruby
0xFE012D # == 16646445
0xfe012d # == 16646445
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
1      # Int32</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052259Z" creationid="hirofumiwakasugi" creationdate="20150901T052259Z">
        <seg>```ruby
1      # Int32</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
1.0      # Float64
1.0_f32  # Float32
1_f32    # Float32</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074015Z" creationid="hirofumiwakasugi" creationdate="20150901T074015Z">
        <seg>```ruby
1.0      # Float64
1.0_f32  # Float32
1_f32    # Float32</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
1_000_000 # better than 1000000
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T052416Z" creationid="hirofumiwakasugi" creationdate="20150901T052416Z">
        <seg>```ruby
1_000_000 # 1000000 より読みやすい
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
1_000_000.111_111 # better than 1000000.111111
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T074039Z" creationid="hirofumiwakasugi" creationdate="20150901T074017Z">
        <seg>```ruby
1_000_000.111_111 # 1000000.111111 より読みやすい
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
:hello
:good_bye</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T131122Z" creationid="hirofumiwakasugi" creationdate="20150901T131122Z">
        <seg>```ruby
:hello
:good_bye</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
MyType(Int32 | String) {1, 2, "foo"}
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140602Z" creationid="hirofumiwakasugi" creationdate="20150901T140602Z">
        <seg>```ruby
MyType(Int32 | String) {1, 2, "foo"}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
MyType(String, String) {"foo": "bar"}
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143117Z" creationid="hirofumiwakasugi" creationdate="20150901T143117Z">
        <seg>```ruby
MyType(String, String) {"foo": "bar"}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
MyType{"foo": "bar"}
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143113Z" creationid="hirofumiwakasugi" creationdate="20150901T143113Z">
        <seg>```ruby
MyType{"foo": "bar"}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
MyType{1, 2, 3}
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140318Z" creationid="hirofumiwakasugi" creationdate="20150901T140318Z">
        <seg>```ruby
MyType{1, 2, 3}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
Proc(Int32, String).new { |x| x.to_s } # Proc(Int32, String)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021459Z" creationid="hirofumiwakasugi" creationdate="20150902T021459Z">
        <seg>```ruby
Proc(Int32, String).new { |x| x.to_s } # Proc(Int32, String)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
[1, 2, 3]         # Array(Int32)
[1, "hello", 'x'] # Array(Int32 | String | Char)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T131950Z" creationid="hirofumiwakasugi" creationdate="20150901T131950Z">
        <seg>```ruby
[1, 2, 3]         # Array(Int32)
[1, "hello", 'x'] # Array(Int32 | String | Char)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
[] of Int32 # same as Array(Int32).new
[]          # syntax error
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T135831Z" creationid="hirofumiwakasugi" creationdate="20150901T135817Z">
        <seg>```ruby
[] of Int32 # Array(Int32).new と同じ
[]          # シンタックスエラーになる
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
a = 1
b = 2
"sum = #{a + b}"        # "sum = 3"
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T105435Z" creationid="hirofumiwakasugi" creationdate="20150901T105435Z">
        <seg>```ruby
a = 1
b = 2
"sum = #{a + b}"        # "sum = 3"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
a = 1
b = 2
a, b = b, a
a #=&gt; 2
b #=&gt; 1
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055738Z" creationid="hirofumiwakasugi" creationdate="20150902T055738Z">
        <seg>```ruby
a = 1
b = 2
a, b = b, a
a #=&gt; 2
b #=&gt; 1
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
a = 1 + 2
a #=&gt; 3
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072340Z" creationid="hirofumiwakasugi" creationdate="20150901T072340Z">
        <seg>```ruby
a = 1 + 2
a #=&gt; 3
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
def one</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022048Z" creationid="hirofumiwakasugi" creationdate="20150902T022048Z">
        <seg>```ruby
def one</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
def plus_one(x)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022124Z" creationid="hirofumiwakasugi" creationdate="20150902T022124Z">
        <seg>```ruby
def plus_one(x)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
foo_or_bar = /foo|bar/
heeello    = /h(e+)llo/
integer    = /\d+/
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T015738Z" creationid="hirofumiwakasugi" creationdate="20150902T015738Z">
        <seg>```ruby
foo_or_bar = /foo|bar/
heeello    = /h(e+)llo/
integer    = /\d+/
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
local += 1  # same as: local = local + 1</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054433Z" creationid="hirofumiwakasugi" creationdate="20150902T054433Z">
        <seg>```ruby
local += 1  # local = local + 1 と同じ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
name = "Crystal"
age = 1
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T051824Z" creationid="hirofumiwakasugi" creationdate="20150902T051824Z">
        <seg>```ruby
name = "Crystal"
age = 1
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
name, age = "Crystal", 1</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055431Z" creationid="hirofumiwakasugi" creationdate="20150902T055431Z">
        <seg>```ruby
name, age = "Crystal", 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
names = "John", "Peter", "Jack"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060208Z" creationid="hirofumiwakasugi" creationdate="20150902T060208Z">
        <seg>```ruby
names = "John", "Peter", "Jack"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
nil
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T050933Z" creationid="hirofumiwakasugi" creationdate="20150901T050933Z">
        <seg>```ruby
nil
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
objects[1], objects[2] = 3, 4</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060317Z" creationid="hirofumiwakasugi" creationdate="20150902T060317Z">
        <seg>```ruby
objects[1], objects[2] = 3, 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
person.age += 1        # same as: person.age = person.age + 1</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055054Z" creationid="hirofumiwakasugi" creationdate="20150902T055054Z">
        <seg>```ruby
person.age += 1        # person.age = person.age + 1 と同じ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
person.name, person.age = "John", 32</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T060244Z" creationid="hirofumiwakasugi" creationdate="20150902T060244Z">
        <seg>```ruby
person.name, person.age = "John", 32</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
proc = -&gt;(x : Int32, y : Int32) { x + y }
proc.call(1, 2) #=&gt; 3
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T021955Z" creationid="hirofumiwakasugi" creationdate="20150902T021955Z">
        <seg>```ruby
proc = -&gt;(x : Int32, y : Int32) { x + y }
proc.call(1, 2) #=&gt; 3
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
puts "Hello world!"
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072447Z" creationid="hirofumiwakasugi" creationdate="20150901T072447Z">
        <seg>```ruby
puts "Hello world!"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
r = %r(regex with slash: /)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020207Z" creationid="hirofumiwakasugi" creationdate="20150902T020207Z">
        <seg>```ruby
r = %r(regex with slash: /)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
r = /foo/imx
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020140Z" creationid="hirofumiwakasugi" creationdate="20150902T020140Z">
        <seg>```ruby
r = /foo/imx
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
require "http/server"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072546Z" creationid="hirofumiwakasugi" creationdate="20150901T072546Z">
        <seg>```ruby
require "http/server"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
s = "hello"
# s :: String
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072403Z" creationid="hirofumiwakasugi" creationdate="20150901T072403Z">
        <seg>```ruby
s = "hello"
# s :: String
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
slash = /\//
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020149Z" creationid="hirofumiwakasugi" creationdate="20150902T020149Z">
        <seg>```ruby
slash = /\//
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
str = "hello"
proc = -&gt;str.count(Char)
proc.call('e') #=&gt; 1
proc.call('l') #=&gt; 2
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022256Z" creationid="hirofumiwakasugi" creationdate="20150902T022256Z">
        <seg>```ruby
str = "hello"
proc = -&gt;str.count(Char)
proc.call('e') #=&gt; 1
proc.call('l') #=&gt; 2
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
tmp = MyType(typeof("foo"), typeof("bar")).new
tmp["foo"] = "bar"
tmp
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143116Z" creationid="hirofumiwakasugi" creationdate="20150901T143116Z">
        <seg>```ruby
tmp = MyType(typeof("foo"), typeof("bar")).new
tmp["foo"] = "bar"
tmp
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
tmp = MyType(typeof(1, 2, 3)).new
tmp &lt;&lt; 1
tmp &lt;&lt; 2
tmp &lt;&lt; 3
tmp
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140508Z" creationid="hirofumiwakasugi" creationdate="20150901T140508Z">
        <seg>```ruby
tmp = MyType(typeof(1, 2, 3)).new
tmp &lt;&lt; 1
tmp &lt;&lt; 2
tmp &lt;&lt; 3
tmp
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
tmp = MyType.new
tmp &lt;&lt; 1
tmp &lt;&lt; 2
tmp &lt;&lt; 3
tmp
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140411Z" creationid="hirofumiwakasugi" creationdate="20150901T140411Z">
        <seg>```ruby
tmp = MyType.new
tmp &lt;&lt; 1
tmp &lt;&lt; 2
tmp &lt;&lt; 3
tmp
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
tmp = MyType.new
tmp["foo"] = "bar"
tmp
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143115Z" creationid="hirofumiwakasugi" creationdate="20150901T143115Z">
        <seg>```ruby
tmp = MyType.new
tmp["foo"] = "bar"
tmp
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
true  # A Bool that is true
false # A Bool that is false
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T051039Z" creationid="hirofumiwakasugi" creationdate="20150901T051039Z">
        <seg>```ruby
true  # A Bool that is true
false # A Bool that is false
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
tuple = {1, "hello", 'x'} # Tuple(Int32, String, Char)
tuple[0]                  #=&gt; 1       (Int32)
tuple[1]                  #=&gt; "hello" (String)
tuple[2]                  #=&gt; 'x'     (Char)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T020745Z" creationid="hirofumiwakasugi" creationdate="20150902T020745Z">
        <seg>```ruby
tuple = {1, "hello", 'x'} # Tuple(Int32, String, Char)
tuple[0]                  #=&gt; 1       (Int32)
tuple[1]                  #=&gt; "hello" (String)
tuple[2]                  #=&gt; 'x'     (Char)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
var = "Hello"
# At this point 'var' is a String</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T052134Z" creationid="hirofumiwakasugi" creationdate="20150902T052134Z">
        <seg>```ruby
var = "Hello"
# At this point 'var' is a String</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
x..y  # an inclusive range, in mathematics: [x, y]
x...y # an exclusive range, in mathematics: [x, y)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T014711Z" creationid="hirofumiwakasugi" creationdate="20150902T014401Z">
        <seg>```ruby
x..y  # 右側の値を「含む」範囲です。数学的には閉区間となります: [x, y]
x...y # 右側の値を「含まない」範囲です。数学的には左閉右開区間となります: [x, y)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
{"key1": 'a', "key2": 'b'} # Hash(String, Char)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T143008Z" creationid="hirofumiwakasugi" creationdate="20150901T143008Z">
        <seg>```ruby
{"key1": 'a', "key2": 'b'} # Hash(String, Char)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
{1 =&gt; 2, 3 =&gt; 4}     # Hash(Int32, Int32)
{1 =&gt; 2, 'a' =&gt; 3}   # Hash(Int32 | Char, Int32)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T140853Z" creationid="hirofumiwakasugi" creationdate="20150901T140853Z">
        <seg>```ruby
{1 =&gt; 2, 3 =&gt; 4}     # Hash(Int32, Int32)
{1 =&gt; 2, 'a' =&gt; 3}   # Hash(Int32 | Char, Int32)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
{key1: 'a', key2: 'b'} # Hash(Symbol, Char)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142946Z" creationid="hirofumiwakasugi" creationdate="20150901T142946Z">
        <seg>```ruby
{key1: 'a', key2: 'b'} # Hash(Symbol, Char)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>```ruby
{} of Int32 =&gt; Int32 # same as Hash(Int32, Int32).new
{}                   # syntax error
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T142650Z" creationid="hirofumiwakasugi" creationdate="20150901T142650Z">
        <seg>```ruby
{} of Int32 =&gt; Int32 # Hash(Int32, Int32).new と同じ
{}                   # シンタックスエラーになる
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>`ln -s [full path to bin/crystal] /usr/local/bin/crystal`</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055936Z" creationid="hirofumiwakasugi" creationdate="20150831T055936Z">
        <seg>`ln -s [full path to bin/crystal] /usr/local/bin/crystal`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>a.length
end
# a :: Int32 | String
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T130410Z" creationid="hirofumiwakasugi" creationdate="20150901T130410Z">
        <seg>a.length
end
# a :: Int32 | String
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>and you're ready to start hacking.</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T060521Z" creationid="hirofumiwakasugi" creationdate="20150831T060521Z">
        <seg>これでハックする準備は OK です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>browser                  open an http server to browse program file</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072215Z" creationid="hirofumiwakasugi" creationdate="20150901T072215Z">
        <seg>browser                  open an http server to browse program file</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build                    compile program file</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072215Z" creationid="hirofumiwakasugi" creationdate="20150901T072215Z">
        <seg>build                    compile program file</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cat &gt; /etc/yum.repos.d/crystal.repo &lt;&lt;END
[crystal]
name = Crystal
baseurl = http://dist.crystal-lang.org/rpm/
END
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055111Z" creationid="hirofumiwakasugi" creationdate="20150831T055111Z">
        <seg>cat &gt; /etc/yum.repos.d/crystal.repo &lt;&lt;END
[crystal]
name = Crystal
baseurl = http://dist.crystal-lang.org/rpm/
END
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/.gitignore</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072145Z" creationid="hirofumiwakasugi" creationdate="20150901T072145Z">
        <seg>create  MyCoolLib/.gitignore</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/.travis.yml</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072146Z" creationid="hirofumiwakasugi" creationdate="20150901T072146Z">
        <seg>create  MyCoolLib/.travis.yml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/LICENSE</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072145Z" creationid="hirofumiwakasugi" creationdate="20150901T072145Z">
        <seg>create  MyCoolLib/LICENSE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/Projectfile</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072146Z" creationid="hirofumiwakasugi" creationdate="20150901T072146Z">
        <seg>create  MyCoolLib/Projectfile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/README.md</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072145Z" creationid="hirofumiwakasugi" creationdate="20150901T072145Z">
        <seg>create  MyCoolLib/README.md</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/spec/MyCoolLib_spec.cr
Initialized empty Git repository in ~/MyCoolLib/.git/
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072147Z" creationid="hirofumiwakasugi" creationdate="20150901T072147Z">
        <seg>create  MyCoolLib/spec/MyCoolLib_spec.cr
Initialized empty Git repository in ~/MyCoolLib/.git/
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/spec/spec_helper.cr</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072146Z" creationid="hirofumiwakasugi" creationdate="20150901T072146Z">
        <seg>create  MyCoolLib/spec/spec_helper.cr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/src/MyCoolLib.cr</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072146Z" creationid="hirofumiwakasugi" creationdate="20150901T072146Z">
        <seg>create  MyCoolLib/src/MyCoolLib.cr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>create  MyCoolLib/src/MyCoolLib/version.cr</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072146Z" creationid="hirofumiwakasugi" creationdate="20150901T072146Z">
        <seg>create  MyCoolLib/src/MyCoolLib/version.cr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>curl http://dist.crystal-lang.org/apt/setup.sh | sudo bash
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T052827Z" creationid="hirofumiwakasugi" creationdate="20150831T052827Z">
        <seg>curl http://dist.crystal-lang.org/apt/setup.sh | sudo bash
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>curl http://dist.crystal-lang.org/rpm/setup.sh | sudo bash
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150831T055106Z" creationid="hirofumiwakasugi" creationdate="20150831T055106Z">
        <seg>curl http://dist.crystal-lang.org/rpm/setup.sh | sudo bash
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>deps                     install project dependencies</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072215Z" creationid="hirofumiwakasugi" creationdate="20150901T072215Z">
        <seg>deps                     install project dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>docs                     generate documentation</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072216Z" creationid="hirofumiwakasugi" creationdate="20150901T072216Z">
        <seg>docs                     generate documentation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>end</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072643Z" creationid="hirofumiwakasugi" creationdate="20150901T072643Z">
        <seg>end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eval                     eval code</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072216Z" creationid="hirofumiwakasugi" creationdate="20150901T072216Z">
        <seg>eval                     eval code</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hierarchy                show type hierarchy</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072216Z" creationid="hirofumiwakasugi" creationdate="20150901T072216Z">
        <seg>hierarchy                show type hierarchy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init                     generate new crystal project</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072215Z" creationid="hirofumiwakasugi" creationdate="20150901T072215Z">
        <seg>init                     generate new crystal project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>local ||= 1 # same as: local || (local = 1)
local &amp;&amp;= 1 # same as: local &amp;&amp; (local = 1)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T054504Z" creationid="hirofumiwakasugi" creationdate="20150902T054504Z">
        <seg>local ||= 1 # local || (local = 1) と同じ
local &amp;&amp;= 1 # local &amp;&amp; (local = 1) と同じ
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>no newlines" # same as "hello world, no newlines"
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104125Z" creationid="hirofumiwakasugi" creationdate="20150901T104125Z">
        <seg>no newlines" # "hello world, no newlines" と同じ
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>objects[1] += 2        # same as: objects[1] = objects[1] + 2</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055115Z" creationid="hirofumiwakasugi" creationdate="20150902T055115Z">
        <seg>objects[1] += 2        # objects[1] = objects[1] + 2 と同じ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>objects[1] ||= 2       # same as: objects[1]? || (objects[1] = 2)
objects[1] &amp;&amp;= 2       # same as: objects[1]? &amp;&amp; (objects[1] = 2)
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055129Z" creationid="hirofumiwakasugi" creationdate="20150902T055122Z">
        <seg>objects[1] ||= 2       # objects[1]? || (objects[1] = 2) と同じ
objects[1] &amp;&amp;= 2       # objects[1]? &amp;&amp; (objects[1] = 2) と同じ
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>person.name ||= "John" # same as: person.name || (person.name = "John")
person.name &amp;&amp;= "John" # same as: person.name &amp;&amp; (person.name = "John")</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T055108Z" creationid="hirofumiwakasugi" creationdate="20150902T055102Z">
        <seg>person.name ||= "John" # person.name || (person.name = "John") と同じ
person.name &amp;&amp;= "John" # person.name &amp;&amp; (person.name = "John") と同じ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>proc = -&gt;one
proc.call #=&gt; 1
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022052Z" creationid="hirofumiwakasugi" creationdate="20150902T022052Z">
        <seg>proc = -&gt;one
proc.call #=&gt; 1
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>proc = -&gt;plus_one(Int32)
proc.call(41) #=&gt; 42
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022126Z" creationid="hirofumiwakasugi" creationdate="20150902T022126Z">
        <seg>proc = -&gt;plus_one(Int32)
proc.call(41) #=&gt; 42
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>puts "Listening on http://0.0.0.0:8080"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072632Z" creationid="hirofumiwakasugi" creationdate="20150901T072632Z">
        <seg>puts "Listening on http://0.0.0.0:8080"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>puts "Listening on http://0.0.0.0:8080"
server.listen
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072546Z" creationid="hirofumiwakasugi" creationdate="20150901T072546Z">
        <seg>puts "Listening on http://0.0.0.0:8080"
server.listen
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>require "http/server"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072605Z" creationid="hirofumiwakasugi" creationdate="20150901T072605Z">
        <seg>require "http/server"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>run (default)            compile and run program file</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072216Z" creationid="hirofumiwakasugi" creationdate="20150901T072216Z">
        <seg>run (default)            compile and run program file</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>server = HTTP::Server.new ...</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072615Z" creationid="hirofumiwakasugi" creationdate="20150901T072615Z">
        <seg>server = HTTP::Server.new ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>server = HTTP::Server.new(8080) do |request|</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072546Z" creationid="hirofumiwakasugi" creationdate="20150901T072546Z">
        <seg>server = HTTP::Server.new(8080) do |request|</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>server.listen</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072633Z" creationid="hirofumiwakasugi" creationdate="20150901T072633Z">
        <seg>server.listen</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>spec                     compile and run specs (in spec directory)</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072216Z" creationid="hirofumiwakasugi" creationdate="20150901T072216Z">
        <seg>spec                     compile and run specs (in spec directory)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>types                    show type of main variables</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T072216Z" creationid="hirofumiwakasugi" creationdate="20150901T072216Z">
        <seg>types                    show type of main variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>var = 1
# At this point 'var' is an Int32
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T052142Z" creationid="hirofumiwakasugi" creationdate="20150902T052142Z">
        <seg>var = 1
# At this point 'var' is an Int32
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>world" # same as "hello\n      world"
```</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T081348Z" creationid="hirofumiwakasugi" creationdate="20150901T081305Z">
        <seg>world" # "hello\n      world" と同じ
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>world, \</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T104118Z" creationid="hirofumiwakasugi" creationdate="20150901T104118Z">
        <seg>world, \</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>x + 1
end</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150902T022126Z" creationid="hirofumiwakasugi" creationdate="20150902T022126Z">
        <seg>x + 1
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>{% highlight ruby %}
# A very basic HTTP server
require "http/server"</seg>
      </tuv>
      <tuv xml:lang="JA" changeid="hirofumiwakasugi" changedate="20150901T130207Z" creationid="hirofumiwakasugi" creationdate="20150901T130207Z">
        <seg>{% highlight ruby %}
# A very basic HTTP server
require "http/server"</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
